name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./... -cover -coverprofile=./cover.out

    - name: Coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        config: ./.testcoverage.yml

    # Written based on https://github.com/vladopajic/go-test-coverage/blob/main/docs/github_action.md
    - name: Find pull request ID
      run: |
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ github.ref_name }}&state=open")
          PR_ID=$(echo "$PR_DATA" | jq -r '.[0].number')
          
          if [ "$PR_ID" != "null" ]; then
          echo "pull_request_id=$PR_ID" >> $GITHUB_ENV
          else
          echo "No open pull request found for this branch."
          fi
    
    - name: Is report present
      if: env.pull_request_id
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ env.pull_request_id }}
        comment-author: 'github-actions[bot]'
        body-includes: 'go-test-coverage report:'
    
    - name: Post coverage report
      if: env.pull_request_id
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ env.pull_request_id }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          go-test-coverage report:
          ```
          ${{ fromJSON(steps.coverage.outputs.report) }} 
          ```
        edit-mode: replace

    - name: Check coverage
      if: steps.coverage.outcome == 'failure'
      shell: bash
      run: echo "coverage check failed" && exit 1
      
  Lint:
    name: lint
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62